{"version":3,"sources":["src/ui-utils.js","src/matrices.js","src/constants.js","src/index.js"],"names":["createUIRow","contentRow","document","createElement","classList","add","createUICol","value","contentCol","colInput","appendChild","selectContainer","containerID","querySelector","clearContainer","container","innerHTML","createInputField","inputField","getInputValue","matrixContainer","childNodes","showErrorDialog","error","errorDialog","section","hideErrorDialog","remove","Matrix","rowsNumber","colsNumber","isNaN","Error","columns","Array","fill","content","publicAPI","entries","countRows","length","countCols","get","row","col","getRow","getContent","setContent","inputContent","isArray","NaNFiltered","filter","Number","map","draw","contentMatrix","print","console","log","MatrixCalculator","matrix1","matrix2","haveSameDimensions","newContent","Object","rowIndex","newRow","keys","colIndex","valueMatrix1","valueMatrix2","push","result","multiply","numOfRowsEqualsToNumOfColumns","currentColValue","currentColIndex","multiplyByScalar","matrix","scalar","getTranspose","i","j","getDeterminant","isSquaredMatrix","provisionalContent","provitionalMatrix","sign","ADD","MULTIPLY","MULTIPLY_BY_SCALAR","secondMatrix","actionType","matrixForm","getElementById","addButton","multiplyButton","multiplyByScalarButton","transposeButton","determinantButton","closeDialog","equalsButton","handleReset","setMatrixContent","rows","rowElements","rowElement","colElements","cols","colElement","addEventListener","event","preventDefault","message","matrixCalculator","inputValue"],"mappings":"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","file":"src.7aa83f78.js","sourceRoot":"..","sourcesContent":["export function createUIRow() {\r\n  var contentRow = document.createElement('div');\r\n  contentRow.classList.add('row');\r\n  return contentRow;\r\n}\r\n\r\nexport function createUICol(value) {\r\n  var contentCol = document.createElement('div');\r\n  contentCol.classList.add('col');\r\n  var colInput = document.createElement('input');\r\n  colInput.value = value;\r\n  contentCol.appendChild(colInput);\r\n  return contentCol;\r\n}\r\n\r\nexport function selectContainer(containerID) {\r\n  return document.querySelector(containerID);\r\n}\r\n\r\nexport function clearContainer(containerID) {\r\n  var container = document.querySelector(containerID);\r\n  if (container) {\r\n    container.innerHTML = '';\r\n  }\r\n}\r\n\r\nexport function createInputField(containerID, value = 0) {\r\n  var inputField = document.createElement('input');\r\n  var container = document.querySelector(containerID);\r\n  inputField.value = value;\r\n  if (container) {\r\n    clearContainer(containerID);\r\n    container.appendChild(inputField);\r\n  }\r\n  return container;\r\n}\r\n\r\nexport function getInputValue(containerID) {\r\n  var matrixContainer = selectContainer(containerID);\r\n  if (matrixContainer) {\r\n    var inputElement = matrixContainer.childNodes[0];\r\n    return inputElement.value;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport function showErrorDialog(error) {\r\n  var errorDialog = document.querySelector('.error');\r\n  if (errorDialog) {\r\n    var section = errorDialog.querySelector('section');\r\n    if (section) {\r\n      section.innerHTML = `<p>${error}</p>`;\r\n    }\r\n    errorDialog.classList.add('show');\r\n  }\r\n}\r\n\r\nexport function hideErrorDialog() {\r\n  var errorDialog = document.querySelector('.error');\r\n  if (errorDialog) {\r\n    errorDialog.classList.remove('show');\r\n  }\r\n}\r\n","import {\r\n  createUIRow,\r\n  createUICol,\r\n  selectContainer,\r\n  clearContainer,\r\n} from './ui-utils';\r\n\r\n//This module manage the modifications over the matrix content\r\nexport function Matrix(rowsNumber, colsNumber) {\r\n  if (isNaN(rowsNumber) || isNaN(colsNumber)) {\r\n    throw new Error('Rows and Columns must be numbers');\r\n  }\r\n  if (rowsNumber <= 0 || colsNumber <= 0) {\r\n    throw new Error('Rows and Columns must be greater than cero');\r\n  }\r\n  var columns = new Array(colsNumber).fill(0);\r\n  var content = new Array(rowsNumber).fill(columns); //Methods below are closed over content variable\r\n  var publicAPI = {\r\n    entries() {\r\n      return content.entries();\r\n    },\r\n    countRows() {\r\n      return content.length;\r\n    },\r\n    countCols() {\r\n      return content[0].length;\r\n    },\r\n    get(row, col) {\r\n      //using 'this' as the current object\r\n      if (typeof row == 'undefined' || this.countRows() < row || row < 0) {\r\n        throw new Error(`Rows must be between 0 and ${this.countRows() - 1}`);\r\n      }\r\n      if (typeof col == 'undefined' || this.countCols() < col || col < 0) {\r\n        throw new Error(`Cols must be between 0 and ${this.countCols() - 1}`);\r\n      }\r\n      return content[row][col];\r\n    },\r\n    getRow(row) {\r\n      if (typeof row == 'undefined' || publicAPI.countRows() < row || row < 0) {\r\n        throw new Error(\r\n          `Rows must be between 0 and ${publicAPI.countRows() - 1}`\r\n        );\r\n      }\r\n      return content[row];\r\n    },\r\n    getContent() {\r\n      return content;\r\n    },\r\n    setContent(inputContent) {\r\n      if (!Array.isArray(inputContent)) {\r\n        throw new Error('Input content must be an Array');\r\n      }\r\n      if (inputContent.length != this.countRows()) {\r\n        throw new Error('Rows must be equals to initial rows');\r\n      }\r\n      for (const row of inputContent) {\r\n        if (row.length != this.countCols()) {\r\n          throw new Error('Cols must be equals to initial cols');\r\n        }\r\n        var NaNFiltered = row.filter((col) => isNaN(Number(col)));\r\n        if (NaNFiltered.length > 0) {\r\n          throw new Error('Elements must be numbers');\r\n        }\r\n      }\r\n      content = inputContent.map((row) => row.map((col) => Number(col)));\r\n    },\r\n    draw(containerID) {\r\n      if (containerID) {\r\n        clearContainer(containerID);\r\n        var contentMatrix = selectContainer(containerID);\r\n        for (const row of this.getContent()) {\r\n          var contentRow = createUIRow();\r\n          for (const col of row) {\r\n            var contentCol = createUICol(col);\r\n            contentRow.appendChild(contentCol);\r\n          }\r\n          contentMatrix.appendChild(contentRow);\r\n        }\r\n      }\r\n    },\r\n    print() {\r\n      console.log(content);\r\n    },\r\n  };\r\n\r\n  return publicAPI;\r\n}\r\n\r\n//This module manage the operations with matrices\r\nexport function MatrixCalculator() {\r\n  var publicAPI = {\r\n    add(matrix1, matrix2) {\r\n      if (!matrix1 || !matrix2) {\r\n        throw new Error('You must provide two matrices');\r\n      }\r\n      if (!haveSameDimensions(matrix1, matrix2)) {\r\n        throw new Error('Matrices must have the same dimensions');\r\n      }\r\n      var newContent = [];\r\n      for (var [rowIndex, row] of matrix1.entries()) {\r\n        var newRow = [];\r\n        for (const colIndex of Object.keys(row)) {\r\n          const valueMatrix1 = matrix1.get(rowIndex, colIndex);\r\n          const valueMatrix2 = matrix2.get(rowIndex, colIndex);\r\n          newRow.push(valueMatrix1 + valueMatrix2);\r\n        }\r\n        newContent.push(newRow);\r\n      }\r\n      var result = Matrix(matrix1.countRows(), matrix1.countCols());\r\n      result.setContent(newContent);\r\n      return result;\r\n    },\r\n    multiply(matrix1, matrix2) {\r\n      if (!matrix1 || !matrix2) {\r\n        throw new Error('You must provide two matrices');\r\n      }\r\n      if (!numOfRowsEqualsToNumOfColumns(matrix1, matrix2)) {\r\n        throw new Error(\r\n          'Matrix1 must have the same number of rows than columns of Matrix2'\r\n        );\r\n      }\r\n      var newContent = [];\r\n      for (const row of matrix1.getContent()) {\r\n        var newRow = [];\r\n        for (const colIndex of Object.keys(matrix2.getRow(0))) {\r\n          let currentColValue = 0;\r\n          for (const [currentColIndex, col] of row.entries()) {\r\n            currentColValue += col * matrix2.get(currentColIndex, colIndex);\r\n          }\r\n          newRow.push(currentColValue);\r\n        }\r\n        newContent.push(newRow);\r\n      }\r\n      var result = Matrix(matrix1.countRows(), matrix2.countCols());\r\n      result.setContent(newContent);\r\n      return result;\r\n    },\r\n    multiplyByScalar(matrix, scalar) {\r\n      if (!matrix) {\r\n        throw new Error('You must provide a matrix');\r\n      }\r\n      if (isNaN(Number(scalar))) {\r\n        throw new Error('The second parameter must be scalar');\r\n      }\r\n      var newContent = [];\r\n      for (const row of matrix.getContent()) {\r\n        var newRow = [];\r\n        for (const col of row) {\r\n          newRow.push(col * scalar);\r\n        }\r\n        newContent.push(newRow);\r\n      }\r\n      var result = Matrix(matrix.countRows(), matrix.countCols());\r\n      result.setContent(newContent);\r\n      return result;\r\n    },\r\n    getTranspose(matrix) {\r\n      if (!matrix) {\r\n        throw new Error('You must provide a matrix');\r\n      }\r\n      var newContent = [];\r\n      for (let i = 0; i < matrix.countCols(); i++) {\r\n        var newRow = [];\r\n        for (let j = 0; j < matrix.countRows(); j++) {\r\n          newRow.push(matrix.get(j, i));\r\n        }\r\n        newContent.push(newRow);\r\n      }\r\n      var result = Matrix(matrix.countCols(), matrix.countRows());\r\n      result.setContent(newContent);\r\n      return result;\r\n    },\r\n    getDeterminant(matrix) {\r\n      if (!matrix) {\r\n        throw new Error('You must provide a matrix');\r\n      }\r\n      if (!isSquaredMatrix(matrix)) {\r\n        throw new Error('must be a squared matrix');\r\n      }\r\n      if (matrix.countRows() == 1) {\r\n        return matrix.get(0, 0);\r\n      }\r\n      if (matrix.countRows() == 2) {\r\n        return (\r\n          matrix.get(0, 0) * matrix.get(1, 1) -\r\n          matrix.get(0, 1) * matrix.get(1, 0)\r\n        );\r\n      }\r\n      let result = 0;\r\n      for (const [colIndex, col] of matrix.getRow(0).entries()) {\r\n        var provisionalContent = [];\r\n        for (const [rowIndex, row] of matrix.getContent().entries()) {\r\n          if (rowIndex > 0) {\r\n            provisionalContent.push(\r\n              row.filter((col, currentColIndex) => currentColIndex != colIndex)\r\n            );\r\n          }\r\n        }\r\n        var provitionalMatrix = Matrix(\r\n          matrix.countRows() - 1,\r\n          matrix.countCols() - 1\r\n        );\r\n        provitionalMatrix.setContent(provisionalContent);\r\n        const sign = colIndex % 2 == 0 ? 1 : -1;\r\n        result += col * this.getDeterminant(provitionalMatrix) * sign;\r\n      }\r\n      return result;\r\n    },\r\n  };\r\n\r\n  function haveSameDimensions(matrix1, matrix2) {\r\n    if (\r\n      matrix1.countRows() != matrix2.countRows() ||\r\n      matrix1.countCols() != matrix2.countCols()\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  function numOfRowsEqualsToNumOfColumns(matrix1, matrix2) {\r\n    if (matrix1.countCols() != matrix2.countRows()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  function isSquaredMatrix(matrix) {\r\n    return matrix.countRows() == matrix.countCols();\r\n  }\r\n\r\n  return publicAPI;\r\n}\r\n","export const ADD = 'ADD';\r\nexport const MULTIPLY = 'MULTIPLY';\r\nexport const MULTIPLY_BY_SCALAR = 'MULTIPLY_BY_SCALAR';\r\n","import { Matrix, MatrixCalculator } from './matrices';\r\nimport {\r\n  selectContainer,\r\n  clearContainer,\r\n  createInputField,\r\n  getInputValue,\r\n  showErrorDialog,\r\n  hideErrorDialog,\r\n} from './ui-utils';\r\nimport { ADD, MULTIPLY, MULTIPLY_BY_SCALAR } from './constants';\r\n\r\n(function () {\r\n  var matrix;\r\n  var secondMatrix;\r\n  var actionType = '';\r\n  var matrixForm = document.getElementById('matrix_form');\r\n  var addButton = document.getElementById('add');\r\n  var multiplyButton = document.getElementById('multiply');\r\n  var multiplyByScalarButton = document.getElementById('multiply_by_scalar');\r\n  var transposeButton = document.getElementById('get_transpose');\r\n  var determinantButton = document.getElementById('get_determinant');\r\n  var closeDialog = document.querySelector('.error i');\r\n  var equalsButton = document.getElementById('equals');\r\n\r\n  matrixForm.addEventListener('submit', function handleSubmit(event) {\r\n    event.preventDefault();\r\n    handleReset();\r\n    try {\r\n      var rows = document.getElementById('rows').value;\r\n      var cols = document.getElementById('cols').value;\r\n      matrix = Matrix(Number(rows), Number(cols));\r\n      matrix.draw('.content__matrix');\r\n    } catch (error) {\r\n      showErrorDialog(error.message);\r\n    }\r\n  });\r\n  closeDialog.addEventListener('click', hideErrorDialog);\r\n  matrixForm.addEventListener('reset', handleReset);\r\n  addButton.addEventListener('click', function handleAdd() {\r\n    try {\r\n      if (matrix) {\r\n        secondMatrix = Matrix(matrix.countRows(), matrix.countCols());\r\n        secondMatrix.draw('.content__second-matrix');\r\n        selectContainer('.content__equals__button').classList.add('show');\r\n        actionType = ADD;\r\n      }\r\n    } catch (error) {\r\n      showErrorDialog(error.message);\r\n    }\r\n  });\r\n  multiplyButton.addEventListener('click', function handleMultiply() {\r\n    try {\r\n      if (matrix) {\r\n        secondMatrix = Matrix(matrix.countCols(), matrix.countRows());\r\n        secondMatrix.draw('.content__second-matrix');\r\n        selectContainer('.content__equals__button').classList.add('show');\r\n        actionType = MULTIPLY;\r\n      }\r\n    } catch (error) {\r\n      showErrorDialog(error.message);\r\n    }\r\n  });\r\n  multiplyByScalarButton.addEventListener(\r\n    'click',\r\n    function handleMultiplyByScalar() {\r\n      try {\r\n        if (matrix) {\r\n          createInputField('.content__second-matrix');\r\n          selectContainer('.content__equals__button').classList.add('show');\r\n          actionType = MULTIPLY_BY_SCALAR;\r\n        }\r\n      } catch (error) {\r\n        showErrorDialog(error.message);\r\n      }\r\n    }\r\n  );\r\n  transposeButton.addEventListener('click', function handleTranspose() {\r\n    try {\r\n      var matrixCalculator = MatrixCalculator();\r\n      if (matrix) {\r\n        matrix = setMatrixContent(matrix, '.content__matrix');\r\n        var result = matrixCalculator.getTranspose(matrix);\r\n        clearContainer('.content__second-matrix');\r\n        selectContainer('.content__equals__button').classList.remove('show');\r\n        result.draw('.content__result');\r\n      }\r\n    } catch (error) {\r\n      showErrorDialog(error.message);\r\n    }\r\n  });\r\n  determinantButton.addEventListener('click', function handleDeterminant() {\r\n    try {\r\n      var matrixCalculator = MatrixCalculator();\r\n      if (matrix) {\r\n        matrix = setMatrixContent(matrix, '.content__matrix');\r\n        const result = matrixCalculator.getDeterminant(matrix);\r\n        clearContainer('.content__second-matrix');\r\n        selectContainer('.content__equals__button').classList.remove('show');\r\n        createInputField('.content__result', result);\r\n      }\r\n    } catch (error) {\r\n      showErrorDialog(error.message);\r\n    }\r\n  });\r\n  equalsButton.addEventListener('click', function handleEquals() {\r\n    var matrixCalculator = MatrixCalculator();\r\n    try {\r\n      switch (actionType) {\r\n        case ADD: {\r\n          if (secondMatrix && matrix) {\r\n            matrix = setMatrixContent(matrix, '.content__matrix');\r\n            secondMatrix = setMatrixContent(\r\n              secondMatrix,\r\n              '.content__second-matrix'\r\n            );\r\n            var result = matrixCalculator.add(matrix, secondMatrix);\r\n            result.draw('.content__result');\r\n          }\r\n          break;\r\n        }\r\n        case MULTIPLY: {\r\n          if (secondMatrix && matrix) {\r\n            matrix = setMatrixContent(matrix, '.content__matrix');\r\n            secondMatrix = setMatrixContent(\r\n              secondMatrix,\r\n              '.content__second-matrix'\r\n            );\r\n            var result = matrixCalculator.multiply(matrix, secondMatrix);\r\n            result.draw('.content__result');\r\n          }\r\n          break;\r\n        }\r\n        case MULTIPLY_BY_SCALAR: {\r\n          if (matrix) {\r\n            matrix = setMatrixContent(matrix, '.content__matrix');\r\n            const inputValue = getInputValue('.content__second-matrix');\r\n            var result = matrixCalculator.multiplyByScalar(matrix, inputValue);\r\n            result.draw('.content__result');\r\n          }\r\n          break;\r\n        }\r\n        default:\r\n          console.log('Invalid Action');\r\n      }\r\n    } catch (error) {\r\n      showErrorDialog(error.message);\r\n    }\r\n  });\r\n  function handleReset() {\r\n    clearContainer('.content__matrix');\r\n    clearContainer('.content__second-matrix');\r\n    clearContainer('.content__result');\r\n    selectContainer('.content__equals__button').classList.remove('show');\r\n  }\r\n\r\n  function setMatrixContent(matrix, containerID) {\r\n    if (matrix) {\r\n      var matrixContainer = selectContainer(containerID);\r\n      var rowElements = matrixContainer.childNodes;\r\n      var rows = [];\r\n      for (const rowElement of rowElements) {\r\n        var colElements = rowElement.childNodes;\r\n        var cols = [];\r\n        for (const colElement of colElements) {\r\n          var colInput = colElement.childNodes[0];\r\n          cols.push(colInput.value);\r\n        }\r\n        rows.push(cols);\r\n      }\r\n      matrix.setContent(rows);\r\n    }\r\n    return matrix;\r\n  }\r\n})();\r\n"]}